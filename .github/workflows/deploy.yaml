name: Terraform Deploy

on:
  workflow_dispatch:
    inputs:
      noop:
        type: choice
        options:
          - 'true'
          - 'false'
        required: true
        description: "Noop (no operations) mode"

concurrency:
  group: ${{ github.workflow }}-${{ github.event }}
  cancel-in-progress: true

jobs:
  terraform_scan:
    uses: ./.github/workflows/scan.yaml
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write

  terraform_test:
    uses: ./.github/workflows/test.yaml
    needs: terraform_scan
    secrets: inherit

  terraform_deploy:
    name: Deploy Infrastructure
    if: github.event.inputs.noop == 'false'
    needs: terraform_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ">= 1.8, < 2.0"

      - name: Terraform init
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Terraform plan
        run: terraform plan -out=tfplan -no-color -input=false

      - name: Terraform apply
        run: terraform apply tfplan -no-color
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
